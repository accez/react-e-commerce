{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Simon\\\\react-e-commerce\\\\web-shop\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ShoppingCartActionTypes from './shopping-cart.types';\nimport { addItemToCart, removeItemFromCart } from './shopping-cart.utils';\nconst INITAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst shoppingCartReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case ShoppingCartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case ShoppingCartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case ShoppingCartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartitem => cartitem.id !== action.payload.id)\n      });\n\n    case ShoppingCartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shoppingCartReducer;","map":{"version":3,"sources":["C:/Users/Simon/react-e-commerce/web-shop/frontend/src/redux/shopping-cart/shopping-cart.reducer.js"],"names":["ShoppingCartActionTypes","addItemToCart","removeItemFromCart","INITAL_STATE","hidden","cartItems","shoppingCartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartitem","id","REMOVE_ITEM"],"mappings":";;;;;;AAAA,OAAOA,uBAAP,MAAoC,uBAApC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,uBAAlD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,uBAAuB,CAACU,kBAA7B;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKJ,uBAAuB,CAACW,QAA7B;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKZ,uBAAuB,CAACa,oBAA7B;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAuBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EAAlE;AAFb;;AAIF,SAAKhB,uBAAuB,CAACiB,WAA7B;AACE,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF/B;;AAIF;AACE,aAAOL,KAAP;AAtBJ;AAwBD,CAzBD;;AA2BA,eAAeD,mBAAf","sourcesContent":["import ShoppingCartActionTypes from './shopping-cart.types'\nimport { addItemToCart, removeItemFromCart } from './shopping-cart.utils'\n\nconst INITAL_STATE = {\n  hidden: true,\n  cartItems: []\n}\n\nconst shoppingCartReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case ShoppingCartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      }\n    case ShoppingCartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      }\n    case ShoppingCartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(cartitem => cartitem.id !== action.payload.id)\n      }\n    case ShoppingCartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      }\n    default:\n      return state\n  }\n}\n\nexport default shoppingCartReducer"]},"metadata":{},"sourceType":"module"}